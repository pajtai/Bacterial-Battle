(function(){var e={}.hasOwnProperty,t=function(t,n){function i(){this.constructor=t}for(var r in n)e.call(n,r)&&(t[r]=n[r]);return i.prototype=n.prototype,t.prototype=new i,t.__super__=n.prototype,t};define(["backbone","lodash","Config"],function(e,n,r){var i;return i=function(e){function i(){return i.__super__.constructor.apply(this,arguments)}return t(i,e),i.prototype.initialize=function(e,t,n,i,s,o){return this.outsideWorld=o,this.set({buid:e,clanid:t,position:{x:n.x,y:n.y},radius:i,vector:{angle:r.Bacterium.notAssigned,magnitude:s},age:0,alive:!0,eaten:[],strategy:"Random Movement"})},i.prototype.update=function(){return this.move(),this.age()},i.prototype.assignAngle=function(e){return e.angle=n.random(0,360)},i.prototype.toRadians=function(e){return e*(Math.PI/180)},i.prototype.move=function(){var e,t,i,s,o,u,a,f,l;f=r.Bacterium.maxMovement,l=this.get("vector"),l.angle===r.Bacterium.notAssigned&&this.assignAngle(l),a=this.get("position"),t=Math.cos(this.toRadians(l.angle))*l.magnitude,i=Math.sin(this.toRadians(l.angle))*l.magnitude,o={x:a.x+t,y:a.y+i},u={angle:l.angle+n.random(-1*r.Bacterium.maxTurnDegrees,r.Bacterium.maxTurnDegrees),magnitude:l.magnitude},this.set({position:o}),this.set({vector:u}),e=this.outsideWorld.bumpsSomething(this);if(!1!==e){s=e;if("wall"===s.obstacle){switch(s.direction){case"top":u.angle=90,o.y=o.y+1;break;case"bottom":u.angle=270,o.y=o.y-1;break;case"left":u.angle=0,o.x=o.x+1;break;case"right":u.angle=180,o.x=o.x-1}this.set({position:o}),this.set({vector:u})}if("bacterium"===s.obstacle)return this.bacterialFight(s.bacterium)}},i.prototype.bacterialFight=function(e){var t,n,r,i,s;return r=e.get("radius"),n=this.get("radius"),n>=r?(i=this,s=e):(i=e,s=this),s.set({alive:!1}),t=i.get("eaten"),t.push(s.get("buid")),this.outsideWorld.bacterialPredation(i,s)},i.prototype.age=function(){return this.set({age:this.get("age")+1})},i.prototype.collidesWith=function(e,t){return this.get("alive")?this.distanceFrom(e)<t+this.get("radius"):!1},i.prototype.collidesWithBacterium=function(e){var t,n;return this.get("alive")?(t=e.get("position"),n=e.get("radius"),this.collidesWith(t,n)):!1},i.prototype.distanceFrom=function(e){var t,n,r,i;return i=this.get("position"),r=e.x-i.x,n=e.y-i.y,t=Math.sqrt(Math.pow(r,2)+Math.pow(n,2)),t},i}(e.Model)})}).call(this)